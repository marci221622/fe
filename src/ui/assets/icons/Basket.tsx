import { forwardRef } from 'react';

export const BasketIcon = forwardRef<SVGSVGElement>(
  ({ className, color = 'currentColor' }: { className?: string; color?: string }, ref) => {
    return (
      <svg
        width="28"
        height="29"
        viewBox="0 0 28 29"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
        ref={ref}
      >
        <path
          d="M3.31555 10.8926C3.40159 9.60199 3.44461 8.9567 3.8651 8.56331C4.28559 8.16992 4.93231 8.16992 6.22575 8.16992H21.7684C23.0618 8.16992 23.7085 8.16992 24.129 8.56331C24.5495 8.9567 24.5925 9.60199 24.6786 10.8926L25.4149 21.9371C25.5315 23.6864 25.5898 24.5611 25.0711 25.1155C24.5524 25.6699 23.6758 25.6699 21.9226 25.6699H6.07149C4.3183 25.6699 3.44171 25.6699 2.92301 25.1155C2.40431 24.5611 2.46262 23.6864 2.57925 21.9371L3.31555 10.8926Z"
          fill={color}
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M13.9856 2.32422C17.8263 2.32422 19.5939 6.65617 20.1743 10.2049L20.1694 10.2051L20.1745 10.2323C20.1994 10.5175 20.0146 10.7728 19.7478 10.8457L19.6442 10.8642C19.3233 10.8923 19.0403 10.6549 19.0122 10.3339L19.0144 10.3451C18.4887 7.41418 17.0694 3.52712 13.9856 3.52712C10.8992 3.52712 9.49672 7.41295 8.98327 10.3475C8.94037 10.6611 8.6605 10.8923 8.34357 10.8645C8.02263 10.8364 7.78522 10.5535 7.8133 10.2326C7.81407 10.2238 7.81503 10.215 7.81618 10.2063L7.79688 10.2049C8.37728 6.65617 10.1449 2.32422 13.9856 2.32422Z"
          fill={color}
        />
      </svg>
    );
  },
);

export function BasketIconV2({ color = 'white' }: { color?: string }) {
  return (
    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M12.087 2.00096C14.7683 2.00096 16.2708 4.4641 17.0048 7.02148L19.1389 7.02104C20.1919 7.02104 21.0645 7.83741 21.1345 8.888L21.8679 19.888C21.9413 20.9901 21.1074 21.9431 20.0053 22.0166C19.961 22.0196 19.9167 22.021 19.8723 22.021H4.14783C3.04326 22.021 2.14783 21.1256 2.14783 20.021C2.14783 19.9767 2.1493 19.9323 2.15226 19.888L2.88559 8.888C2.95563 7.83741 3.82823 7.02104 4.88116 7.02104L7.16921 7.02153C7.90312 4.46431 9.40565 2.00096 12.087 2.00096ZM18.9519 8.51181L17.3497 8.51134C17.475 9.20887 17.5469 9.87785 17.5742 10.4671L17.5812 10.5143C17.5849 10.5564 17.585 10.5979 17.5818 10.6386C17.5851 10.7637 17.587 10.8846 17.587 11.001C17.587 11.1183 17.5832 11.2403 17.5758 11.3663L17.5771 10.6827C17.5304 11.0217 17.2547 11.2958 16.8994 11.3269C16.4868 11.363 16.123 11.0577 16.0869 10.6451C16.0831 10.6017 16.0831 10.5588 16.0866 10.5168C16.0551 9.9733 15.9719 9.26642 15.8196 8.51115L8.3557 8.51151C8.20247 9.28349 8.12077 10.0054 8.09157 10.5551C8.09474 10.5897 8.09419 10.6255 8.09103 10.6616C8.05493 11.0742 7.69116 11.3795 7.27852 11.3434C6.86588 11.3073 6.56064 10.9435 6.59674 10.5309C6.59704 10.5275 6.59736 10.5241 6.5977 10.5207C6.62296 9.91884 6.69525 9.2306 6.82427 8.51199L5.06823 8.51181C4.71035 8.51181 4.40783 8.76337 4.33492 9.10414L4.3201 9.20889L3.57726 19.7089C3.57602 19.7265 3.57539 19.7442 3.57539 19.7618C3.57539 20.1415 3.85755 20.4553 4.22362 20.505L4.32539 20.5118L19.7212 20.5113L19.7477 20.5099C20.1264 20.4831 20.4195 20.1796 20.4432 19.8109L20.4429 19.7089L19.7 9.20889C19.6722 8.81619 19.3456 8.51181 18.9519 8.51181ZM12.0795 3.51181C10.3543 3.51181 9.3194 5.19346 8.73586 7.02149L15.4345 7.02125C14.8447 5.19408 13.8033 3.51181 12.0795 3.51181Z"
        fill={color}
      />
    </svg>
  );
}
