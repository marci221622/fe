{
  "env": {
    "es6": true,
    "es2021": true,
    "browser": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "extends": [
    "plugin:react/recommended",
    "plugin:effector/react",
    "airbnb",
    "prettier",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended"
  ],
  "plugins": ["@typescript-eslint", "prettier", "react-hooks", "jsx-a11y", "import", "effector", "deprecation"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parserOptions": {
        "project": ["./tsconfig.json"]
      }
    }
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "rules": {
    "jsx-a11y/alt-text": "warn",
    "no-underscore-dangle": "off",
    "no-bitwise": ["error", { "allow": ["^"] }],
    "deprecation/deprecation": "error",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
    "no-use-before-define": "warn",
    "class-methods-use-this": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "^i18n|^_",
        "ignoreRestSiblings": true,
        "argsIgnorePattern": "^_"
      }
    ],
    "camelcase": "off",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "default",
        "format": ["PascalCase", "camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow",
        "filter": {
          "regex": "^(_|__|@@unitShape)$",
          "match": false
        }
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "max-classes-per-file": "off",
    "arrow-body-style": "off",
    "arrow-parens": ["error", "as-needed"],
    "global-require": "off",
    "import/extensions": "off",
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    "prefer-destructuring": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "no-nested-ternary": 0,
    "no-param-reassign": [
      "warn",
      {
        "props": true,
        "ignorePropertyModificationsFor": ["acc", "map", "state"]
      }
    ],
    "import/no-unresolved": "off",
    "no-plusplus": "off",
    "no-restricted-syntax": "off",
    "operator-linebreak": "off",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "warn",
    "react/destructuring-assignment": "off",
    "react/jsx-props-no-spreading": "off",
    "react/no-array-index-key": "warn",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/require-default-props": "off",
    "react/function-component-definition": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-var-requires": "warn",
    "react/jsx-filename-extension": [2, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
    "@typescript-eslint/ban-ts-comment": "off",
    "react/no-unstable-nested-components": "off",
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index", "unknown"],
        "pathGroups": [
          { "pattern": "**/*.{css,scss}", "group": "unknown", "position": "after" },
          { "pattern": "{.,..}/**/*.{css,scss}", "group": "unknown", "position": "after" },
          { "pattern": "@/generated/*", "group": "external", "position": "before" },
          { "pattern": "@/constants/*", "group": "internal", "position": "after" },
          { "pattern": "@/shared/*", "group": "internal" },
          { "pattern": "@/features/*", "group": "internal", "position": "after" },
          { "pattern": "@/lib/*", "group": "internal", "position": "after" },
          { "pattern": "@/ui/*", "group": "internal", "position": "after" },
          { "pattern": "@/ui/assets/*", "group": "internal", "position": "after" }
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["const", "let", "var"],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ]
  },
  "ignorePatterns": ["package-lock.json", "index.d.ts"],
  "settings": {
    "import/resolver": {
      "typescript": {},
      "webpack": {
        "config": {
          "resolve": {
            "extensions": [".js", ".cjs", ".jsx", ".tsx"]
          }
        }
      }
    }
  }
}
